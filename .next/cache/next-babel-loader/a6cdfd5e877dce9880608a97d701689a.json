{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              console.log('fetching data');\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (err) {\n                setError();\n              }));\n\n            case 4:\n              data = _context.sent;\n              setStats(data);\n              setLoading(true);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["C:/Users/Ebenezeri/2020/node/second/utils/utilsStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","console","log","fetch","then","res","json","err","data"],"mappings":";AAAA,SAAUA,QAAV,EAAoBC,SAApB,QAAqC,OAArC;AAEC,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACTH,QAAQ,EADC;AAAA,MAC5BI,KAD4B;AAAA,MACrBC,QADqB;;AAAA,mBAGLL,QAAQ,CAAC,IAAD,CAHH;AAAA,MAG5BM,OAH4B;AAAA,MAGnBC,UAHmB;;AAAA,mBAITP,QAAQ,EAJC;AAAA,MAI5BQ,KAJ4B;AAAA,MAIrBC,QAJqB;;AAMnCR,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACIH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAFJ;AAAA,+CAIuBC,KAAK,CAACV,GAAD,CAAL,CAAWW,IAAX,CAAgB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAAnB,WACZ,UAAAC,GAAG,EAAI;AACVR,gBAAAA,QAAQ;AACX,eAHkB,CAJvB;;AAAA;AAIUS,cAAAA,IAJV;AASIb,cAAAA,QAAQ,CAACa,IAAD,CAAR;AACAX,cAAAA,UAAU,CAAC,IAAD,CAAV;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYAG,IAAAA,SAAS;AACZ,GAdQ,EAcN,CAACP,GAAD,CAdM,CAAT;AAeA,SAAO;AACHC,IAAAA,KAAK,EAALA,KADG;AAEHE,IAAAA,OAAO,EAAPA,OAFG;AAGHE,IAAAA,KAAK,EAALA;AAHG,GAAP;AAKH","sourcesContent":["import  { useState, useEffect } from 'react';\r\n\r\n export default function useStats(url) {\r\n    const [stats, setStats] = useState();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            console.log('fetching data');\r\n\r\n            const data = await fetch(url).then(res => res.json())\r\n            .catch(err => {\r\n                setError();\r\n            });\r\n            \r\n            setStats(data);\r\n            setLoading(true);\r\n        }\r\n        fetchData();\r\n    }, [url]);\r\n    return {\r\n        stats,\r\n        loading,\r\n        error,\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}